basePath: /
definitions:
  dto.Login:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  dto.Product:
    properties:
      name:
        type: string
      price:
        type: number
      product_id:
        type: integer
      stock:
        type: integer
    type: object
  dto.Transaction:
    properties:
      product_id:
        type: integer
      quantity:
        type: integer
    type: object
  dto.User:
    properties:
      deposit_amount:
        type: number
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:8081
info:
  contact:
    email: stephen@email.com
    name: stephen
  description: This is ngc11-12 api docs
  title: NGC11-12 Api Docs
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Register new user
      operationId: Login-user
      parameters:
      - description: User to login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.Login'
      produces:
      - application/json
      responses:
        "200":
          description: success login
          schema:
            type: string
        "400":
          description: bad request
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Create user
  /products:
    get:
      description: get all product
      operationId: Get-all-user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Product'
        "400":
          description: bad request
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: get all product
  /register:
    post:
      consumes:
      - application/json
      description: Register new user
      operationId: Create-user
      parameters:
      - description: User to register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/dto.User'
      produces:
      - application/json
      responses:
        "201":
          description: success register
          schema:
            type: string
        "400":
          description: bad request
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Create user
  /transactions:
    post:
      consumes:
      - application/json
      description: order product and write history to table transaction
      operationId: Create-transaction
      parameters:
      - description: Craete transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/dto.Transaction'
      produces:
      - application/json
      responses:
        "201":
          description: success create transaction
          schema:
            type: string
        "400":
          description: bad request
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: create new transaction
swagger: "2.0"
